openapi: 3.0.0
info:
  title: Flights CRUD Application
  description: API for managing flights
  version: 1.0.0
servers:
  - url: http://localhost:3000/api/v1
    description: Local development server
tags:
  - name: flights
    description: Flight management operations
  - name: auth
    description: Authentication operations
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Flight:
      type: object
      properties:
        flightNumber:
          type: string
        departure:
          type: string
        destination:
          type: string
        departureTime:
          type: string
          format: date-time
        arrivalTime:
          type: string
          format: date-time
        aircraft:
          type: string
        status:
          type: string
          enum:
            - scheduled
            - departed
            - arrived
            - cancelled
    User:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          format: password
      required:
        - username
        - password
    AuthResponse:
      type: object
      properties:
        token:
          type: string
    AuthError:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
paths:
  /flights:
    get:
      summary: Get all flights
      tags:
        - flights
      security:
        - bearerAuth: []
      responses:
        "200":
          description: A list of flights
        "500":
          description: Internal server error
    post:
      summary: Create a new flight
      tags:
        - flights
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Flight"
      responses:
        "201":
          description: Flight created successfully
        "400":
          description: Bad request (e.g., validation error)
        "500":
          description: Internal server error
  /flights/{flightNumber}:
    get:
      summary: Get a flight by flight number
      tags:
        - flights
      security:
        - bearerAuth: []
      parameters:
        - name: flightNumber
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Flight details
        "404":
          description: Flight not found
        "500":
          description: Internal server error
    patch:
      summary: Update a flight
      tags:
        - flights
      security:
        - bearerAuth: []
      parameters:
        - name: flightNumber
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Flight"
      responses:
        "200":
          description: Flight updated successfully
        "400":
          description: Bad request (e.g., validation error)
        "404":
          description: Flight not found
        "500":
          description: Internal server error
    delete:
      summary: Cancel a flight
      tags:
        - flights
      security:
        - bearerAuth: []
      parameters:
        - name: flightNumber
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Flight cancelled successfully
        "404":
          description: Flight not found
        "500":
          description: Internal server error
  /auth/token:
    post:
      summary: Authenticate user and get token
      tags:
        - auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: Authentication successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        "401":
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthError"
        "500":
          description: Server error
  /auth/register:
    post:
      summary: Register a new user
      tags:
        - auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  username:
                    type: string
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
        "400":
          description: Invalid user data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthError"
        "409":
          description: User already exists
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthError"
        "500":
          description: Server error
